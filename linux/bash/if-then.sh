#!/bin/bash
# Конструкция if-then-...-elif-...-fi и работа с аргументами
# https://www.opennet.ru/docs/RUS/bash_scripting_guide/x2565.html
#
#-----------------------------------------------------------------------
######## сравнение целых чисел в квадратных скобках
# -eq    равно
# -ne    не равно
# -gt    больше
# -ge    больше или равно
# -lt    меньше
# -le    меньше или равно
#-----------------------------------------------------------------------
######## сравнение целых чисел в круглых скобках
# <      меньше (внутри двойных круглых скобок )    
# <=     меньше или равно (внутри двойных круглых скобок)
# >      больше (внутри двойных круглых скобок)
# >=     больше или равно (внутри двойных круглых скобок)
#-----------------------------------------------------------------------
######## сравнение строк в квадратных скобках
# =      равно
# ==     равно
# !=     не равно
# <      меньше, в смысле величины ASCII-кодов
# >      больше, в смысле величины ASCII-кодов
# -z     строка "пустая", т.е. имеет нулевую длину
# -n     строка не "пустая" (в кавычках внутри квадратных скобок)
#-----------------------------------------------------------------------


echo "Количество аргументов $#, требуется для скрипта 2"

#-----------------------------------------------------------------------
# Проверка на равество:
#......................
#  Общее правило для проверок в квадратных скобках!!!
# Вокруг условия внутри квадратных скобок должны быть пробелы!
# [ ... ] - корректно
# [...]   - ошибка
# [ ...]  - ошибка
# [... ]  - ошибка
# if [1 == 2]; then <<Это ошибка
#
if [ "$#" == 2 ]; then
	echo "Ок/1. Передано 2 аргумента."
fi
# then в новой строке ";" перед then не требуется
if [ "$#" == 2 ]
then
	echo "Ок/2. Передано 2 аргумента."
fi
#
if [ $# == 2 ]; then
	echo "Ок/3. Передано 2 аргумента."
fi
#
if [ "$#" -eq 2 ]; then
	echo "Ок/4. Передано 2 аргумента."
fi
#-----------------------------------------------------------------------
# Проверка на "меньше":
#......................
if [[ "$#" < 2 ]]; then
	echo "Fail/1. Мало аргументов."
fi
#
if [ "$#" \< 2 ]; then
	echo "Fail/2. Мало аргументов."
fi
#
if [ "$#" -lt 2 ]; then
	echo "Fail/3. Мало аргументов."
fi
#-----------------------------------------------------------------------
# Проверка на "больше":
#......................
if [[ "$#" -gt 2 ]]; then
	echo "Fail/1. Много аргументов."
fi
#
if [[ "$#" > 2 ]]; then
	echo "Fail/2. Много аргументов."
fi
#
if [ "$#" \> 2 ]; then
	echo "Fail/3. Много аргументов."
fi
#-----------------------------------------------------------------------
# Продвинутая структура "if" :
#.............................
if [ "$#" \< 2 ]; then
	echo "if-elif-fi. Мало аргументов."
elif (( "$#" > 2 )); then
	echo "if-elif-fi. Много аргументов."
elif [ "$#" -eq 2 ]; then
 	echo "if-elif-fi. Нужное количество аргументов."
 	echo "---Проверка 'равно'"
 	if [[ $1 -eq $2 ]]; then
		echo "[[-eq]] true - число"
 	else
		echo "[[-eq]] false - число"
 	fi
 	if [[ "$1" = "$2" ]]; then
		echo "[[=]] true - строка"
 	else
		echo "[[=]] false - строка"
 	fi
 	if [[ "$1" == "$2" ]]; then
		echo "[[==]] true - строка"
 	else
		echo "[[==]] false - строка"
 	fi 	
 	if [ "$1" = "$2" ]; then
		echo "[=] true - Строка"
 	else
		echo "[=] false - Строка"
 	fi
 	if [ "$1" == "$2" ]; then
		echo "[==] true - строка"
 	else
		echo "[==] false - строка"
 	fi 	
 	echo "---Проверка 'не равно'"
 	if [[ $1 -ne $2 ]]; then
		echo "[[-ne]] true - число"
 	else
		echo "[[-ne]] false - число"
 	fi 	
 	if [[ $1 != $2 ]]; then
		echo "[[!-]] true - Строка"
 	else
		echo "[[!=]] false - Строка"
 	fi 	 	
 	echo "---Проверка 'больше'"
 	if [[ $1 -gt $2 ]]; then
		echo "[[-gt]] true - число"
 	else
		echo "[[-gt]] false - число"
 	fi 	
 	if (($1 > $2)); then
		echo "((>)) true - число"
 	else
		echo "((>)) false - число"
 	fi 	 	
 	if [[ $1 > $2 ]]; then
		echo "[[>]] true - Строка, ASCII код"
 	else
		echo "[[>]] false - Строка, ASCII код"
 	fi 	 	
 	echo "---Проверка 'меньше'"
 	if [[ $1 -lt $2 ]]; then
		echo "[[-lt]] true - число"
 	else
		echo "[[-lt]] false - число"
 	fi 	
 	if (($1 < $2)); then
		echo "((<)) true - число"
 	else
		echo "((<)) false - число"
 	fi 	 	
 	if [[ $1 < $2 ]]; then
		echo "[[<]] true - Строка, ASCII код"
 	else
		echo "[[<]] false - Строка, ASCII код"
 	fi 	 	 	
else
	echo "if-elif-fi. Сюда никогда не попадем."
fi
#-----------------------------------------------------------------------
# Логическое И ИЛИ :
# -a - логическое И (and)
# -o - логическое ИЛИ (or)
#...................

# -e $outPath - файл сущуствует
# -o  - ИЛИ
# -h $outPath - символическа ссылка существует
if [ -e $outPath -o -h $outPath ]; then
  echo "skip: "$outPath
else
  ln -s $inpPath $outPath
  echo "create link: "$outPath
fi
#-----------------------------------------------------------------------
exit 0
