#--------------------------------------------------------------------------------------
# Имеем большой "php.log" 
# В нем много "PHP Fatal error:", "PHP Notice:" и т.д.
# Нужно вытащить уникальные строки, посчитать количество уникальных, отсортировать по частоте встречания
# 
# Строки следующей структуры:
# [21-Dec-2019 14:27:52 UTC] PHP Notice:  Undefined index: PERSON in /usr/local/zend/var/apps/http/my-site.local/80/1.0.0.4491/application/modules/app/controllers/MyTestController.php on line 70
# 
# На выходе должно быть
# <count> PHP Notice:  Undefined index: PERSON in /usr/local/zend/var/apps/http/my-site.local/80/1.0.0.4491/application/modules/app/controllers/MyTestController.php on line 70
#----

# 1. egrep - выбирает строки, которые начинаются как дата, напр. "[21-Dec-2019"
# 2. cut   - выбирает из результата п"1." строки с позиции 32 и до конца строки
#            -c 32 - вырезать с позиции 32 и до конца строки
# 3. sort  - сортирует строки п"2.", чтобы их могла посчитать следующая команда
# 4. uniq  - выбирает уникальные строки п"3." и считает их количество. Количество выводится в начале строки.
#            -c - посчитать количество
# 5. sort  - сортирует строки п"4". Т.к. количество в начале, то получим сортировку по количеству.
#            -r - вывести в обратном порядке
#            -n - рассматривать текст, как число
#            -k 1 - для сортировки использовать первый столбец. По умолчанию, разделитель столбцов пробел.
egrep "\[[0-9]{2}-[a-zA-Z]{3}-[0-9]{4}" php.log | cut -c 32- | sort | uniq -c | sort -r -nk 1 > php-log-stat.txt

#--------------------------------------------------------------------------------------
